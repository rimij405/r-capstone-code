#!/usr/bin/env Rscript

# This is a helper script to generate a visualization network graph.
# Choose how to execute the pipeline below.
# See https://books.ropensci.org/targets/hpc.html
# to learn about your options.

# Set the script path.
box::set_script_path(file.path(getwd(), "DSCI799CapstoneIAE2784"))

# Load the targets and visNetwork modules.
box::use(
    here[path.resolve = here],
    targets[tar_visnetwork],
    visNetwork[visSave],
    config = ./src/config,
)

# Get the configuration details.
.settings <- config$app()

# Define options for the network graph.
options <- list(
    targets_only = TRUE,
    callr_function = NULL,
    outdated = TRUE,
    zoom_speed = 2,
    physics = TRUE
)

# Create the graph.
print("Generating the graph...")
output <- do.call(tar_visnetwork, options)

# Create the output path name.
output_timestamp <- format(Sys.time(), "%Y-%m-%dT%H_%M")
output_basename <- .settings["GRAPH_TITLE"]
output_ext <- ".html"
output_path <- paste(
    output_basename,
    "[", output_timestamp, "]",
    output_ext,
    sep = ""
)

# Get the full filepath.
output_dir <- path.resolve("_targets/reports")
output_path <- file.path(output_dir, output_path)

# Ensure directory exists.
if (! dir.exists(output_dir)) {
    dir.create(output_dir, recursive = TRUE, mode = "0755")
}

# Save the graph.
print(paste("Saving the graph to:", output_path))
visSave(graph = output, file = output_path, background = "#d2d2d2")

# Check if missing.
if (! file.exists(output_path)) {
    stop("Failed to generate the file.")
    return(NULL)
}

# Echo the name of the file.
message(output_path)
